<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gerador de Currículo Profissional</title>
    <style>
        :root {
            --primary-color: #2c3e50;
            --secondary-color: #3498db;
            --accent-color: #e74c3c;
            --light-color: #ecf0f1;
            --dark-color: #34495e;
            --text-color: #333;
            --border-radius: 5px;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Arial', sans-serif;
        }

        body {
            background-color: #f5f7fa;
            color: var(--text-color);
            line-height: 1.6;
            padding: 20px;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
        }

        header {
            text-align: center;
            margin-bottom: 30px;
            padding: 20px;
            background-color: white;
            border-radius: var(--border-radius);
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        h1 {
            color: var(--primary-color);
            margin-bottom: 10px;
        }

        .description {
            color: var(--dark-color);
            max-width: 800px;
            margin: 0 auto;
        }

        .form-section {
            background-color: white;
            padding: 25px;
            border-radius: var(--border-radius);
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            margin-bottom: 30px;
        }

        h2 {
            color: var(--primary-color);
            margin-bottom: 20px;
            padding-bottom: 10px;
            border-bottom: 1px solid #eee;
            cursor: pointer;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .form-group {
            margin-bottom: 15px;
        }

        label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
            color: var(--dark-color);
        }

        input, textarea, select {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: var(--border-radius);
            font-size: 14px;
        }

        textarea {
            min-height: 100px;
            resize: vertical;
        }

        .btn {
            background-color: var(--secondary-color);
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: var(--border-radius);
            cursor: pointer;
            font-size: 16px;
            transition: background-color 0.3s;
        }

        .btn:hover {
            background-color: #2980b9;
        }

        .btn-danger {
            background-color: var(--accent-color);
        }

        .btn-danger:hover {
            background-color: #c0392b;
        }

        .btn-success {
            background-color: #27ae60;
        }

        .btn-success:hover {
            background-color: #219955;
        }

        .close-btn {
            background: none;
            border: none;
            font-size: 18px;
            cursor: pointer;
            color: var(--accent-color);
        }

        .models-section {
            display: flex;
            gap: 20px;
            margin-bottom: 30px;
            flex-wrap: wrap;
        }

        .model-card {
            flex: 1;
            min-width: 250px;
            background-color: white;
            border-radius: var(--border-radius);
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            padding: 20px;
            text-align: center;
            transition: transform 0.3s;
        }

        .model-card:hover {
            transform: translateY(-5px);
        }

        .model-card h3 {
            color: var(--primary-color);
            margin-bottom: 10px;
        }

        .model-card p {
            color: var(--dark-color);
            margin-bottom: 15px;
        }

        .preview-section {
            background-color: white;
            padding: 25px;
            border-radius: var(--border-radius);
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            margin-bottom: 30px;
            display: none;
        }

        .preview-section.active {
            display: block;
        }

        .preview-container {
            max-width: 800px;
            margin: 0 auto;
            padding: 30px;
            background-color: white;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }

        .actions {
            text-align: center;
            margin-top: 20px;
        }

        /* Estilos para impressão */
        @media print {
            body * {
                visibility: hidden;
            }
            .preview-section, .preview-section * {
                visibility: visible;
            }
            .preview-section {
                position: absolute;
                left: 0;
                top: 0;
                width: 100%;
                box-shadow: none;
                padding: 0;
                margin: 0;
            }
            .preview-container {
                box-shadow: none;
                padding: 20px;
            }
            .actions {
                display: none;
            }
        }

        /* Estilos específicos para os modelos de currículo */
        /* Modelo 1 - Clássico */
        .resume-classic {
            font-family: 'Arial', sans-serif;
            font-size: 12px;
            line-height: 1.4;
        }

        .resume-classic .header {
            text-align: center;
            margin-bottom: 20px;
            padding-bottom: 15px;
            border-bottom: 2px solid var(--primary-color);
        }

        .resume-classic .header h1 {
            font-size: 24px;
            margin-bottom: 5px;
            color: var(--primary-color);
        }

        .resume-classic .contact-info {
            display: flex;
            justify-content: center;
            flex-wrap: wrap;
            gap: 15px;
            margin-top: 10px;
        }

        .resume-classic .section {
            margin-bottom: 20px;
        }

        .resume-classic .section-title {
            font-size: 16px;
            font-weight: bold;
            color: var(--primary-color);
            margin-bottom: 10px;
            padding-bottom: 5px;
            border-bottom: 1px solid #eee;
        }

        .resume-classic .experience-item, .resume-classic .education-item {
            margin-bottom: 15px;
        }

        .resume-classic .item-header {
            display: flex;
            justify-content: space-between;
            font-weight: bold;
            margin-bottom: 5px;
        }

        .resume-classic .skills-list {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
        }

        .resume-classic .skill-tag {
            background-color: #f0f0f0;
            padding: 3px 8px;
            border-radius: 3px;
            font-size: 11px;
        }

        /* Modelo 2 - Moderno */
        .resume-modern {
            font-family: 'Calibri', sans-serif;
            font-size: 11px;
            line-height: 1.4;
        }

        .resume-modern .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            padding-bottom: 15px;
            border-bottom: 1px solid var(--secondary-color);
        }

        .resume-modern .header-left h1 {
            font-size: 22px;
            color: var(--primary-color);
            margin-bottom: 5px;
        }

        .resume-modern .header-left .title {
            font-size: 14px;
            color: var(--secondary-color);
            font-weight: bold;
        }

        .resume-modern .contact-info {
            text-align: right;
        }

        .resume-modern .section {
            margin-bottom: 18px;
        }

        .resume-modern .section-title {
            font-size: 14px;
            font-weight: bold;
            color: var(--secondary-color);
            margin-bottom: 8px;
            padding-left: 10px;
            border-left: 3px solid var(--secondary-color);
        }

        .resume-modern .experience-item, .resume-modern .education-item {
            margin-bottom: 12px;
        }

        .resume-modern .item-header {
            display: flex;
            justify-content: space-between;
            font-weight: bold;
            margin-bottom: 3px;
        }

        .resume-modern .item-subtitle {
            font-style: italic;
            margin-bottom: 5px;
        }

        .resume-modern .skills-list {
        display: flex;
         flex-wrap: wrap;
        gap: 8px;
       }

      .resume-modern .skill-tag {
       background-color: #f0f0f0;
       padding: 3px 8px;
       border-radius: 3px;
       font-size: 11px;
        }


        /* Modelo 3 - Minimalista */
        .resume-minimal {
            font-family: 'Lato', sans-serif;
            font-size: 11px;
            line-height: 1.4;
        }

        .resume-minimal .header {
            text-align: center;
            margin-bottom: 25px;
        }

        .resume-minimal .header h1 {
            font-size: 20px;
            letter-spacing: 1px;
            margin-bottom: 5px;
            color: var(--primary-color);
        }

        .resume-minimal .header .title {
            font-size: 12px;
            color: var(--dark-color);
            margin-bottom: 10px;
        }

        .resume-minimal .contact-info {
            display: flex;
            justify-content: center;
            flex-wrap: wrap;
            gap: 10px;
            font-size: 10px;
        }

        .resume-minimal .section {
            margin-bottom: 15px;
        }

        .resume-minimal .section-title {
            font-size: 13px;
            font-weight: bold;
            text-transform: uppercase;
            letter-spacing: 1px;
            color: var(--primary-color);
            margin-bottom: 8px;
            padding-bottom: 3px;
            border-bottom: 1px solid #ddd;
        }

        .resume-minimal .experience-item, .resume-minimal .education-item {
            margin-bottom: 10px;
        }

        .resume-minimal .item-header {
            display: flex;
            justify-content: space-between;
            font-weight: bold;
            margin-bottom: 3px;
        }

        .resume-minimal .skills-list {
            display: flex;
            flex-wrap: wrap;
            gap: 5px;
        }

        .resume-minimal .skill-tag {
            background-color: #f5f5f5;
            padding: 2px 6px;
            border-radius: 2px;
            font-size: 10px;
        }

        /* Responsividade */
        @media (max-width: 768px) {
            .models-section {
                flex-direction: column;
            }

            .model-card {
                min-width: 100%;
            }

            .resume-modern .header {
                flex-direction: column;
                text-align: center;
            }

            .resume-modern .contact-info {
                text-align: center;
                margin-top: 10px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <h1>Gerador de Currículo Profissional</h1>
            <p class="description">Preencha seus dados abaixo e escolha um dos modelos para gerar seu currículo em PDF.</p>
        </header>

        <!-- Seções do formulário (mesmo código anterior) -->
        <section class="form-section">
            <h2>Informações Pessoais <button class="close-btn" onclick="toggleSection(this)">−</button></h2>
            <div class="form-content">
                <div class="form-group">
                    <label for="fullName">Nome Completo</label>
                    <input type="text" id="fullName" placeholder="Seu nome completo">
                </div>
                <div class="form-group">
                    <label for="cityState">Cidade/Estado</label>
                    <input type="text" id="cityState" placeholder="Ex: São Paulo, SP">
                </div>
                <div class="form-group">
                    <label for="phone">Telefone/WhatsApp</label>
                    <input type="text" id="phone" placeholder="(11) 99999-9999">
                </div>
                <div class="form-group">
                    <label for="email">E-mail Profissional</label>
                    <input type="email" id="email" placeholder="nome.sobrenome@gmail.com">
                </div>
                <div class="form-group">
                    <label for="linkedin">LinkedIn ou Portfólio (opcional)</label>
                    <input type="text" id="linkedin" placeholder="https://linkedin.com/in/seu-perfil">
                </div>
                <div class="form-group">
                    <label for="professionalTitle">Título Profissional</label>
                    <input type="text" id="professionalTitle" placeholder="Ex: Desenvolvedor Full Stack">
                </div>
                <div class="form-group">
                    <label for="professionalSummary">Resumo Profissional</label>
                    <textarea id="professionalSummary" placeholder="Descreva brevemente sua experiência, habilidades e objetivos profissionais (3-5 linhas)"></textarea>
                </div>
            </div>
        </section>

        <section class="form-section">
            <h2>Experiência Profissional <button class="close-btn" onclick="toggleSection(this)">−</button></h2>
            <div class="form-content" id="experienceContainer">
                <div class="experience-item">
                    <div class="form-group">
                        <label for="jobTitle1">Cargo</label>
                        <input type="text" id="jobTitle1" placeholder="Ex: Analista de Dados">
                    </div>
                    <div class="form-group">
                        <label for="company1">Empresa</label>
                        <input type="text" id="company1" placeholder="Nome da empresa">
                    </div>
                    <div class="form-group">
                        <label for="period1">Período</label>
                        <input type="text" id="period1" placeholder="Ex: Jan 2022 - Atual">
                    </div>
                    <div class="form-group">
                        <label for="description1">Descrição das atividades</label>
                        <textarea id="description1" placeholder="Descreva suas principais atividades e conquistas (use tópicos)"></textarea>
                    </div>
                </div>
            </div>
            <button class="btn" id="addExperience">+ Adicionar Experiência</button>
        </section>

        <section class="form-section">
            <h2>Formação Acadêmica <button class="close-btn" onclick="toggleSection(this)">−</button></h2>
            <div class="form-content" id="educationContainer">
                <div class="education-item">
                    <div class="form-group">
                        <label for="course1">Curso</label>
                        <input type="text" id="course1" placeholder="Ex: Bacharelado em Ciência da Computação">
                    </div>
                    <div class="form-group">
                        <label for="institution1">Instituição</label>
                        <input type="text" id="institution1" placeholder="Nome da instituição">
                    </div>
                    <div class="form-group">
                        <label for="completion1">Conclusão</label>
                        <input type="text" id="completion1" placeholder="Ex: 2023">
                    </div>
                </div>
            </div>
            <button class="btn" id="addEducation">+ Adicionar Formação</button>
        </section>

        <section class="form-section">
            <h2>Habilidades Técnicas</h2>
            <div class="form-group">
                <label for="skills">Liste suas habilidades (separadas por vírgula)</label>
                <textarea id="skills" placeholder="Ex: Python, JavaScript, SQL, Power BI, Excel Avançado"></textarea>
            </div>
        </section>

        <section class="form-section">
            <h2>Idiomas</h2>
            <div class="form-group">
                <label for="languages">Idiomas e níveis (separados por vírgula)</label>
                <input type="text" id="languages" placeholder="Ex: Inglês Intermediário, Espanhol Básico">
            </div>
        </section>

        <section class="form-section">
            <h2>Cursos e Certificações</h2>
            <div class="form-group">
                <label for="certifications">Cursos e certificações (separados por ponto e vírgula)</label>
                <textarea id="certifications" placeholder="Ex: Certificação Google Data Analytics - Coursera - 2024; Curso de Gestão de Projetos - Udemy - 2023"></textarea>
            </div>
        </section>

        <section class="models-section">
            <div class="model-card">
                <h3>Modelo Clássico</h3>
                <p>Layout tradicional e profissional, ideal para a maioria das áreas.</p>
                <button class="btn" onclick="previewResume('classic')">Visualizar</button>
            </div>
            <div class="model-card">
                <h3>Modelo Moderno</h3>
                <p>Design contemporâneo com foco em clareza e organização.</p>
                <button class="btn" onclick="previewResume('modern')">Visualizar</button>
            </div>
            <div class="model-card">
                <h3>Modelo Minimalista</h3>
                <p>Estilo limpo e direto, perfeito para quem valoriza simplicidade.</p>
                <button class="btn" onclick="previewResume('minimal')">Visualizar</button>
            </div>
        </section>

        <section id="previewSection" class="preview-section">
            <div class="actions">
                <button class="btn btn-danger" onclick="closePreview()">Fechar Visualização</button>
                <button class="btn btn-success" onclick="window.print()">Imprimir/PDF</button>
            </div>
            <div id="previewContainer" class="preview-container">
                <!-- O conteúdo do currículo será inserido aqui -->
            </div>
        </section>
    </div>
    <script>
        // Contadores para experiências e formações
        let experienceCount = 1;
        let educationCount = 1;
        let currentModel = '';

        // Adicionar nova experiência
        document.getElementById('addExperience').addEventListener('click', function() {
            experienceCount++;
            const container = document.getElementById('experienceContainer');
            const newExperience = document.createElement('div');
            newExperience.className = 'experience-item';
            newExperience.innerHTML = `
                <div class="form-group">
                    <label for="jobTitle${experienceCount}">Cargo</label>
                    <input type="text" id="jobTitle${experienceCount}" placeholder="Ex: Analista de Dados">
                </div>
                <div class="form-group">
                    <label for="company${experienceCount}">Empresa</label>
                    <input type="text" id="company${experienceCount}" placeholder="Nome da empresa">
                </div>
                <div class="form-group">
                    <label for="period${experienceCount}">Período</label>
                    <input type="text" id="period${experienceCount}" placeholder="Ex: Jan 2022 - Atual">
                </div>
                <div class="form-group">
                    <label for="description${experienceCount}">Descrição das atividades</label>
                    <textarea id="description${experienceCount}" placeholder="Descreva suas principais atividades e conquistas (use tópicos)"></textarea>
                </div>
            `;
            container.appendChild(newExperience);
        });

        // Adicionar nova formação
        document.getElementById('addEducation').addEventListener('click', function() {
            educationCount++;
            const container = document.getElementById('educationContainer');
            const newEducation = document.createElement('div');
            newEducation.className = 'education-item';
            newEducation.innerHTML = `
                <div class="form-group">
                    <label for="course${educationCount}">Curso</label>
                    <input type="text" id="course${educationCount}" placeholder="Ex: Bacharelado em Ciência da Computação">
                </div>
                <div class="form-group">
                    <label for="institution${educationCount}">Instituição</label>
                    <input type="text" id="institution${educationCount}" placeholder="Nome da instituição">
                </div>
                <div class="form-group">
                    <label for="completion${educationCount}">Conclusão</label>
                    <input type="text" id="completion${educationCount}" placeholder="Ex: 2023">
                </div>
            `;
            container.appendChild(newEducation);
        });

        // Fechar visualização
        function closePreview() {
            document.getElementById('previewSection').classList.remove('active');
        }

        // Alternar exibição de seções
        function toggleSection(button) {
            const section = button.closest('.form-section');
            const content = section.querySelector('.form-content');
            if (content.style.display === 'none') {
                content.style.display = 'block';
                button.textContent = '−';
            } else {
                content.style.display = 'none';
                button.textContent = '+';
            }
        }

        // Visualizar currículo
        function previewResume(model) {
            const formData = collectFormData();
            const resumeHTML = generateResumeHTML(model, formData);
            document.getElementById('previewContainer').innerHTML = resumeHTML;
            document.getElementById('previewSection').classList.add('active');
            currentModel = model;
            document.getElementById('previewSection').scrollIntoView({ behavior: 'smooth' });
        }

        // Coletar dados do formulário
        function collectFormData() {
            const data = {
                personal: {
                    fullName: document.getElementById('fullName').value,
                    cityState: document.getElementById('cityState').value,
                    phone: document.getElementById('phone').value,
                    email: document.getElementById('email').value,
                    linkedin: document.getElementById('linkedin').value,
                    professionalTitle: document.getElementById('professionalTitle').value,
                    professionalSummary: document.getElementById('professionalSummary').value
                },
                experiences: [],
                educations: [],
                skills: document.getElementById('skills').value.split(',').map(skill => skill.trim()),
                languages: document.getElementById('languages').value.split(',').map(lang => lang.trim()),
                certifications: document.getElementById('certifications').value.split(';').map(cert => cert.trim())
            };

            for (let i = 1; i <= experienceCount; i++) {
                const jobTitle = document.getElementById(`jobTitle${i}`)?.value;
                const company = document.getElementById(`company${i}`)?.value;
                const period = document.getElementById(`period${i}`)?.value;
                const description = document.getElementById(`description${i}`)?.value;
                if (jobTitle && company) {
                    data.experiences.push({ jobTitle, company, period, description });
                }
            }

            for (let i = 1; i <= educationCount; i++) {
                const course = document.getElementById(`course${i}`)?.value;
                const institution = document.getElementById(`institution${i}`)?.value;
                const completion = document.getElementById(`completion${i}`)?.value;
                if (course && institution) {
                    data.educations.push({ course, institution, completion });
                }
            }

            return data;
        }

        // Gerar HTML do currículo baseado no modelo
        function generateResumeHTML(model, data) {
            let html = '';
            switch(model) {
                case 'classic':
                    html = generateClassicResume(data);
                    break;
                case 'modern':
                    html = generateModernResume(data);
                    break;
                case 'minimal':
                    html = generateMinimalResume(data);
                    break;
            }
            return html;
        }

        // Gerar currículo no modelo clássico
        function generateClassicResume(data) {
            return `
                <div class="resume-classic">
                    <div class="header">
                        <h1>${data.personal.fullName}</h1>
                        <div class="contact-info">
                            <span>${data.personal.cityState}</span>
                            <span>${data.personal.phone}</span>
                            <span>${data.personal.email}</span>
                            ${data.personal.linkedin ? `<span>${data.personal.linkedin}</span>` : ''}
                        </div>
                    </div>
                    <div class="section">
                        <div class="section-title">Resumo Profissional</div>
                        <p>${data.personal.professionalSummary}</p>
                    </div>
                    ${data.experiences.length > 0 ? `
                    <div class="section">
                        <div class="section-title">Experiência Profissional</div>
                        ${data.experiences.map(exp => `
                            <div class="experience-item">
                                <div class="item-header">
                                    <span>${exp.jobTitle} - ${exp.company}</span>
                                    <span>${exp.period}</span>
                                </div>
                                <div>${formatDescription(exp.description)}</div>
                            </div>
                        `).join('')}
                    </div>
                    ` : ''}
                    ${data.educations.length > 0 ? `
                    <div class="section">
                        <div class="section-title">Formação Acadêmica</div>
                        ${data.educations.map(edu => `
                            <div class="education-item">
                                <div class="item-header">
                                    <span>${edu.course}</span>
                                    <span>${edu.completion}</span>
                                </div>
                                <div>${edu.institution}</div>
                            </div>
                        `).join('')}
                    </div>
                    ` : ''}
                    ${data.skills.filter(skill => skill).length > 0 ? `
                    <div class="section">
                        <div class="section-title">Habilidades Técnicas</div>
                        <div class="skills-list">
                            ${data.skills.filter(skill => skill).map(skill => `
                                <span class="skill-tag">${skill}</span>
                            `).join('')}
                        </div>
                    </div>
                    ` : ''}
                    ${data.languages.filter(lang => lang).length > 0 ? `
                    <div class="section">
                        <div class="section-title">Idiomas</div>
                        <div>${data.languages.filter(lang => lang).join(', ')}</div>
                    </div>
                    ` : ''}
                    ${data.certifications.filter(cert => cert).length > 0 ? `
                    <div class="section">
                        <div class="section-title">Cursos e Certificações</div>
                        <ul>
                            ${data.certifications.filter(cert => cert).map(cert => `
                                <li>${cert}</li>
                            `).join('')}
                        </ul>
                    </div>
                    ` : ''}
                </div>
            `;
        }

        // Gerar currículo no modelo moderno
        function generateModernResume(data) {
            return `
                <div class="resume-modern">
                    <div class="header">
                        <div class="header-left">
                            <h1>${data.personal.fullName}</h1>
                            <div class="title">${data.personal.professionalTitle}</div>
                        </div>
                        <div class="contact-info">
                            <div>${data.personal.cityState}</div>
                            <div>${data.personal.phone}</div>
                            <div>${data.personal.email}</div>
                            ${data.personal.linkedin ? `<div>${data.personal.linkedin}</div>` : ''}
                        </div>
                    </div>
                    <div class="section">
                        <div class="section-title">Perfil</div>
                        <p>${data.personal.professionalSummary}</p>
                    </div>
                    ${data.experiences.length > 0 ? `
                    <div class="section">
                        <div class="section-title">Experiência</div>
                        ${data.experiences.map(exp => `
                            <div class="experience-item">
                                <div class="item-header">
                                    <span>${exp.jobTitle}</span>
                                    <span>${exp.period}</span>
                                </div>
                                <div class="item-subtitle">${exp.company}</div>
                                <div>${formatDescription(exp.description)}</div>
                            </div>
                        `).join('')}
                    </div>
                    ` : ''}
                    ${data.educations.length > 0 ? `
                    <div class="section">
                        <div class="section-title">Formação</div>
                        ${data.educations.map(edu => `
                            <div class="education-item">
                                <div class="item-header">
                                    <span>${edu.course}</span>
                                    <span>${edu.completion}</span>
                                </div>
                                <div>${edu.institution}</div>
                            </div>
                        `).join('')}
                    </div>
                    ` : ''}
                    ${data.skills.filter(skill => skill).length > 0 ? `
                    <div class="section">
                        <div class="section-title">Competências</div>
                        <div class="skills-list">
                            ${data.skills.filter(skill => skill).map(skill => `
                                <div class="skill-item">
                                    <span>${skill}</span>
                                </div>
                            `).join('')}
                        </div>
                    </div>
                    ` : ''}
                    ${data.languages.filter(lang => lang).length > 0 ? `
                    <div class="section">
                        <div class="section-title">Idiomas</div>
                        <div>${data.languages.filter(lang => lang).join(', ')}</div>
                    </div>
                    ` : ''}
                    ${data.certifications.filter(cert => cert).length > 0 ? `
                    <div class="section">
                        <div class="section-title">Certificações</div>
                        <ul>
                            ${data.certifications.filter(cert => cert).map(cert => `
                                <li>${cert}</li>
                            `).join('')}
                        </ul>
                    </div>
                    ` : ''}
                </div>
            `;
        }

        // Gerar currículo no modelo minimalista
        function generateMinimalResume(data) {
            return `
                <div class="resume-minimal">
                    <div class="header">
                        <h1>${data.personal.fullName}</h1>
                        <div class="title">${data.personal.professionalTitle}</div>
                        <div class="contact-info">
                            <span>${data.personal.cityState}</span>
                            <span>${data.personal.phone}</span>
                            <span>${data.personal.email}</span>
                            ${data.personal.linkedin ? `<span>${data.personal.linkedin}</span>` : ''}
                        </div>
                    </div>
                    <div class="section">
                        <div class="section-title">Resumo</div>
                        <p>${data.personal.professionalSummary}</p>
                    </div>
                    ${data.experiences.length > 0 ? `
                    <div class="section">
                        <div class="section-title">Experiência</div>
                        ${data.experiences.map(exp => `
                            <div class="experience-item">
                                <div class="item-header">
                                    <span>${exp.jobTitle}</span>
                                    <span>${exp.period}</span>
                                </div>
                                <div>${exp.company}</div>
                                <div>${formatDescription(exp.description)}</div>
                            </div>
                        `).join('')}
                    </div>
                    ` : ''}
                    ${data.educations.length > 0 ? `
                    <div class="section">
                        <div class="section-title">Formação</div>
                        ${data.educations.map(edu => `
                            <div class="education-item">
                                <div class="item-header">
                                    <span>${edu.course}</span>
                                    <span>${edu.completion}</span>
                                </div>
                                <div>${edu.institution}</div>
                            </div>
                        `).join('')}
                    </div>
                    ` : ''}
                    ${data.skills.filter(skill => skill).length > 0 ? `
                    <div class="section">
                        <div class="section-title">Habilidades</div>
                        <div class="skills-list">
                            ${data.skills.filter(skill => skill).map(skill => `
                                <span class="skill-tag">${skill}</span>
                            `).join('')}
                        </div>
                    </div>
                    ` : ''}
                    ${data.languages.filter(lang => lang).length > 0 ? `
                    <div class="section">
                        <div class="section-title">Idiomas</div>
                        <div>${data.languages.filter(lang => lang).join(', ')}</div>
                    </div>
                    ` : ''}
                    ${data.certifications.filter(cert => cert).length > 0 ? `
                    <div class="section">
                        <div class="section-title">Certificações</div>
                        <ul>
                            ${data.certifications.filter(cert => cert).map(cert => `
                                <li>${cert}</li>
                            `).join('')}
                        </ul>
                    </div>
                    ` : ''}
                </div>
            `;
        }

        // Formatar descrição
        function formatDescription(text) {
            if (!text) return '';
            if (text.includes('-') || text.includes('•')) {
                return text.split('\n').map(line => {
                    if (line.trim().startsWith('-') || line.trim().startsWith('•')) {
                        return line.trim();
                    } else if (line.trim()) {
                        return `• ${line.trim()}`;
                    }
                    return '';
                }).filter(line => line).join('<br>');
            }
            return text.split('\n').map(line => {
                if (line.trim()) {
                    return `• ${line.trim()}`;
                }
                return '';
            }).filter(line => line).join('<br>');
        }
    </script>
</body>
</html>
